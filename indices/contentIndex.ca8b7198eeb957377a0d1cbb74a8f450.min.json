{"/":{"title":"Quartz Jemu","content":"\n## What is this\n\nIt's [Quartz], which basically takes an [Obsidian] vault and wraps [hugo] around it.\nSo.. yeah.\n\nYet another second brain thing.\nBecause I don't have enough half-filled auxilliary brains lying around already.\nBut here goes.\n\n\n## What will this be\n\nIdunno yet.\nMaybe something about [[notes/tools/starship]], or [[notes/programming/Rust]], or #tools ?\nAt this point I'm just making links to stuff for the link's sake, just to see how it's rendered.\n\n\n[Quartz]: https://github.com/jackyzha0/quartz/\n[Obsidian]: https://help.obsidian.md/Obsidian/Index\n[hugo]: https://github.com/gohugoio/hugo","lastmodified":"2023-04-01T14:39:49.203012928Z","tags":[]},"/notes/Fixing-file-associations-on-macOS":{"title":"Fixing file associations on macOS","content":"\nWhen you try to open a small [[YAML]] file and nothing happens, only to realize that the behemoth that is Xcode has been starting up for what feels like minutes --- that's when it's time to recheck file type associations on your machine.\n\n[[notes/tools/duti]] is a neat and ancient little tool for that. It's _unsupported_ and I wouldn't rely on it in the long run, but as long as it still works, it works.\n\n## Checking associations\n\n```shell\n❯ duti -x yaml\nZed.app\n/Applications/Zed.app\ndev.zed.Zed\n\n❯ duti -x sh\nXcode.app\n/Applications/Xcode.app\ncom.apple.dt.Xcode\n```\n\n## Fixing associations\n\n```\nduti -s com.microsoft.VSCode sh all\nduti -s com.microsoft.VSCode bash all\nduti -s com.microsoft.VSCode zsh all\nduti -s com.microsoft.VSCode yml all\n```\n\nUseful identifiers:\n- `dev.zed.Zed` ( haven't used [[notes/tools/Zed]] yet but it's fast and neat)\n- `com.rstudio.desktop` [[RStudio]]\n- `com.microsoft.VSCode` [[VSCode]]\n- `org.videolan.vlc` \n- `com.apple.TextEdit`\n- `com.apple.Finder`","lastmodified":"2023-04-01T14:39:49.203012928Z","tags":["tools","macOS"]},"/notes/ML/Elastic-Net":{"title":"Elastic Net","content":"\nA [[notes/ML/Regularization]] technique used form [[notes/ML/Linear Regression]] to [[deep learning]].\n\n\nSpawned [[notes/ML/fwelnet]].","lastmodified":"2023-04-01T14:39:49.203012928Z","tags":["regression"]},"/notes/ML/Linear-Regression":{"title":"Linear Regression","content":"\nGood ol' $\\mathbf{X}(\\mathbf{X}'\\mathbf{X})^{-1}\\mathbf{X}'\\mathbf{Y}$ amirite\n\nCan be [[notes/ML/Regularization|regularized]]","lastmodified":"2023-04-01T14:39:49.203012928Z","tags":["regression"]},"/notes/ML/ML":{"title":"Machine Learning","content":"\nWonder what happens if a note has the same name as a tag.","lastmodified":"2023-04-01T14:39:49.203012928Z","tags":[]},"/notes/ML/Regularization":{"title":"Regularization","content":"\nYou know it's important if the DL folk gave it a different name.","lastmodified":"2023-04-01T14:39:49.203012928Z","tags":["ML"]},"/notes/ML/fwelnet":{"title":"fwelnet","content":"\n-  [[notes/programming/R]] package on [GitHub](https://github.com/kjytay/fwelnet)\n\n","lastmodified":"2023-04-01T14:39:49.203012928Z","tags":["regression"]},"/notes/ML/mlr3":{"title":"mlr3","content":"\n[[notes/programming/R]] package / framework for [[notes/ML/ML]] stuff.\n\nThere is a [book available][mlr3book] and soon to be published.\n\n[mlr3book]: https://mlr3book.mlr-org.com/","lastmodified":"2023-04-01T14:39:49.203012928Z","tags":["ML","R-package","framework"]},"/notes/OS/Ubuntu":{"title":"Ubuntu","content":"\n## Useful links\n- [Upgrading to 22.04](https://linuxize.com/post/how-to-upgrade-to-ubuntu-22-04/)\n\n\n- Installing [[notes/tools/Modern Unix]] may require [[notes/tools/Homebrew]] for many tools, at least it makes it easier and/or gets more recent versions.\n\n\nI like [[notes/tools/nala]] as an alternative `apt` frontend.\n\n\n- [[Unattended Upgrades]]","lastmodified":"2023-04-01T14:39:49.203012928Z","tags":["operating-system"]},"/notes/OS/cuda":{"title":"cuda","content":"\n[Nvidia installation instructions](https://docs.nvidia.com/datacenter/tesla/tesla-installation-notes/index.html#ubuntu-lts).\n\nCan be a pain, usually is.\n\nNote that [[notes/Unattended Upgrades]] can ruin your day by auto-upgrading drivers apprently, which will at best require a reboot before the GPUs can be used again and at worst screw up your whole package situation such that you may have to nuke everything and reinstall drivers/cuda things.","lastmodified":"2023-04-01T14:39:49.203012928Z","tags":["Sysadmin"]},"/notes/OS/macOS":{"title":"macOS","content":"\nOS of choice and habit.\n\nMaybe I should jot down some things on [[Alfred]] or [[notes/tools/Homebrew]] or [[iTerm2]] or something.","lastmodified":"2023-04-01T14:39:49.203012928Z","tags":["operating-system"]},"/notes/Unattended-Upgrades":{"title":"Unattended Upgrades","content":"\nConfig for apt on [[notes/OS/Ubuntu]]:\n\n```\n/etc/apt/apt.conf.d/50unattended-upgrades\n```\n\nTo disable auto-updating nvidia / [[notes/OS/cuda]] packages:\n\n```\n// Python regular expressions, matching packages to exclude from upgrading\nUnattended-Upgrade::Package-Blacklist {\n     // Do not upgrade nvidia stuff\n     \"nvidia*\";\n     \"libnvidia*\";\n     \"cuda*\";\n     // ...\n```\n\nAt leats I think that should work.","lastmodified":"2023-04-01T14:39:49.203012928Z","tags":["ubuntu","sysadmin"]},"/notes/programming/R":{"title":"R","content":"\nThis is only a test\n\n[[notes/tools/rig]] [[notes/tools/renv]] [[RSPM]] [[CRAN]] \n","lastmodified":"2023-04-01T14:39:49.203012928Z","tags":["programming"]},"/notes/programming/Rust":{"title":"Rust","content":"\n## Learning Resources\n\n- [The Book][The Book]\n- [The Book, but interactive][book-brown]\n- [Rust by Example][Rust by Example]\n- [Rustlings][rustlings]\n- [Faster than lime](https://fasterthanli.me/articles/a-half-hour-to-learn-rust)'s neat post(s)\n- [This Week in Rust](https://this-week-in-rust.org/)\n- [Read Rust](https://readrust.net)\n\n\u003e [!tip] Recommended Beginner Workflow\n\u003e  \n\u003e By at least one YouTube person anyway:\n\u003e \n\u003e1. Go through the book, cover to cover\n\u003e2. Go through the book again, but now the interactive version\n\u003e3. Rust by example + Rustlings: Complementary.\n\n### Topic-Specific Resources\n- [Are we web yet?](https://www.arewewebyet.org/)\n- [Are we GUI yet?](https://www.areweguiyet.com/)\n- [Are we learning yet?](https://www.arewelearningyet.com/)\n\t- Looks like theres [[notes/ML/ML]] stuff? https://www.arewelearningyet.com/decision-trees/\n\t- Some projects are... not in good shape https://github.com/maciejkula/rustlearn\n\t\t- ![[assets/Screenshot 2023-03-28 at 01.09.21.jpg]]\n\n\n## Setup\n\nVia [rustup], `curl`'ing into `sh` like madlads:\n\n```shell {title=\"curling into sh lol\"}\ncurl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh\n```\n\n\n## Crates I should check out I guess\n- `clap`: CLI interfaces\n- `serde`: Getting data in \u0026 out (see also `serde_json`)\n\t- `csv` either additionally useful or superfluous?\n- Web stuff?\n\t- [`leptos`](https://github.com/leptos-rs/leptos)\n\t- [`yew`](https://yew.rs/)\n\n\n## Tools written in Rust to take a peek in\n\n- [[notes/tools/starship]]\n- [[notes/tools/rig]]\n- [That YouTube ISG thing](https://github.com/DvorakDwarf/Infinite-Storage-Glitch) - archived now, so I guess it was fun while it lasted\n\n\n[The Book]: https://doc.rust-lang.org/book\n[book-brown]: https://rust-book.cs.brown.edu\n[Rust by Example]: https://doc.rust-lang.org/rust-by-example/\n[rustlings]: https://github.com/rust-lang/rustlings\n[rustup]: https://rustup.rs/","lastmodified":"2023-04-01T14:39:49.203012928Z","tags":["programming"]},"/notes/programming/Shell-Scripting":{"title":"Shell Scripting","content":"\nI always look up the same things again and again and/or refer to old scripts where I've done the looking up. Might as well start dumping some things here.\n\n## Arrays\n\nI _think_ this is compatible with [[bash]]/[[notes/tools/zsh]], but not sure. I tend to stick to bash for scripts for portability, just in case.\n\n```shell\npackages=( ctop lazydocker )\n\nfor i in \"${packages[@]}\"\ndo\n  echo \"Checking if $i is available...\"\n  if [ -x \"$(command -v $i)\" ]; then\n    echo \"Found $i\"\n  else\n    brew install $i\n  fi\ndone\n```\n\n## Case\n\n```shell\ncase expression in\n    pattern1 )\n        statements \n    ;;\n    pattern2 )\n        statements\n    ;;\n    ...\nesac\n```","lastmodified":"2023-04-01T14:39:49.207012967Z","tags":["programming"]},"/notes/tools/Homebrew":{"title":"Homebrew","content":"\nApparently either beloved or hated, depending on.. things I haven't quite looked into and probably would rather avoid.\n\nWorks for me.\n\nOn [[notes/OS/macOS]] and [[notes/OS/Ubuntu]], where on the latter it's a nice supplement to out of date or not (yet?) available `apt` packages, while not having to do the `git clone`s and the `sudo make install`s for some common tools, like the [[notes/tools/Modern Unix]] stack","lastmodified":"2023-04-01T14:39:49.207012967Z","tags":["package manager","tools"]},"/notes/tools/Modern-Unix":{"title":"Modern Unix","content":"\n- Main list [on GitHub](https://github.com/ibraheemdev/modern-unix)\n- See also [Julia Evan's supplementary list](https://jvns.ca/blog/2022/04/12/a-list-of-new-ish--command-line-tools/).\n\n## Honorary Mentions\n- [[lsd]], [[notes/tools/exa]]\n- [[ripgrep]], [[fd]], [[sd]]\n- [[notes/tools/delta]]\n- `dust`, `diskus`, and `duf`\n- `zoxide` and `broot`\n- For [[docker]]:\n\t- [`lazydocker`](https://github.com/jesseduffield/lazydocker), no Ubuntu package unfortunately, [[Golang]] -based\n\t- [`ctop`](https://github.com/bcicen/ctop)\n\nHaven't given [`mcfly`](https://github.com/cantino/mcfly) a proper go yet but might be nice.\n\u003e TL;DR: an upgraded `ctrl-r` where history results make sense for what you're working on right now.","lastmodified":"2023-04-01T14:39:49.207012967Z","tags":["shell","tools"]},"/notes/tools/Zed":{"title":"Zed","content":"\nhttps://zed.dev/features\n\nA neat GUI editor written in [[notes/programming/Rust]] and currently in beta.\nHas some nice features and reminds me of Sublime Text.\n","lastmodified":"2023-04-01T14:39:49.207012967Z","tags":["tools","editor"]},"/notes/tools/delta":{"title":"git-delta","content":"\nhttps://github.com/dandavison/delta\n\nNamed `git-delta` in most package managers.\n\n\nA nicer `diff` .\nOne of the [[notes/tools/Modern Unix]] tools.\nSee also [[notes/tools/git]]\n","lastmodified":"2023-04-01T14:39:49.207012967Z","tags":["tools","git"]},"/notes/tools/duti":{"title":"duti","content":"\nhttps://github.com/moretension/duti\n\nA [[notes/OS/macOS]] file association thingy.","lastmodified":"2023-04-01T14:39:49.207012967Z","tags":["tools"]},"/notes/tools/exa":{"title":"exa","content":"\n`exa` is neat as it shows pretty colors, optional [[notes/tools/git]] status, and icons.\nIt's part of the [[notes/tools/Modern Unix]] stack, supplementing the venerable `ls`.\n\nI have it aliased to show `git` icons by default, because that's kind of the selling feature in my case:\n\n```shell\nalias exa=\"exa -l --git --icons\"\n```\n\n![[assets/Screenshot 2023-03-29 at 01.11.15.jpg]]\n\nI prefer [[lsd]] though, even though it does not have the same `git` feature, it is also pretty by default _and_ its arguments are backward compatible with GNU `ls`, so you can keep all your existing aliases and muscle memory.\nAlso, `lsd` is slighty faster (even without the `git` status), but that may vary on caching and whatnot --- the point is that `lsd` feels snappier in my experience, and since typing `l` is kind of a habitual thing I type many times a day, that counts for something ¯\\\\\\_(ツ)\\_/¯.","lastmodified":"2023-04-01T14:39:49.207012967Z","tags":["tools","shell"]},"/notes/tools/git":{"title":"git","content":"\nShould this be its own tag?\n\nAt some place I'd need to collect useful commands, like adding the following to `.gitconfig`:\n\n```\n[alias]\n\tadog = log --all --decorate --oneline --graph\n```\n\nBecause it's useful to `git adog` sometimes.\n\nOr setting up [[notes/tools/delta]] for nicer diffs:\n\n```\n[pager]\n    diff = delta\n    log = delta\n    reflog = delta\n    show = delta\n\n[delta]\n    plus-style = \"syntax #012800\"\n    minus-style = \"syntax #340001\"\n    syntax-theme = Monokai Extended\n    navigate = true\n\n[interactive]\n    diffFilter = delta --color-only\n```\n\nOr how to set up GPG signing commits.\n\nOr how to store credentials securely on Linux (sigh), which I currently do with [[gh]]:\n\n```\n[credential \"https://github.com\"]\n\thelper =\n\thelper = !/opt/homebrew/bin/gh auth git-credential\n[credential \"https://gist.github.com\"]\n\thelper = !/opt/homebrew/bin/gh auth git-credential\n```","lastmodified":"2023-04-01T14:39:49.207012967Z","tags":["tools"]},"/notes/tools/nala":{"title":"nala","content":"\nInstall from here: https://gitlab.com/volian/nala/-/wikis/Installation\n\nRun `sudo nala fetch` to test available package mirrors and pick the fast/reliable ones.","lastmodified":"2023-04-01T14:39:49.207012967Z","tags":["tools","ubuntu"]},"/notes/tools/renv":{"title":"renv","content":"","lastmodified":"2023-04-01T14:39:49.207012967Z","tags":["R","tools","R-package"]},"/notes/tools/rig":{"title":"rig","content":"","lastmodified":"2023-04-01T14:39:49.207012967Z","tags":["R","tools"]},"/notes/tools/starship":{"title":"starship 🚀","content":"\nAnyone spending a lot of time in the [[terminal]] might have an opinion about what the shell prompt should look like.\n[starship] is one of the possible answers, I guess.\n\n![[assets/Screenshot 2023-03-28 at 01.38.04.jpg]]\n\n[starship]: https://starship.rs","lastmodified":"2023-04-01T14:39:49.207012967Z","tags":["prompt","customization","rust"]},"/notes/tools/typst":{"title":"typst","content":"\nhttps://github.com/typst/typst\n\n- Docs: https://typst.app/docs/tutorial/writing-in-typst/\n- Web-editor (overleaf-like) https://typst.app/\n\nA [[notes/programming/Rust]]-based [[LaTeX]]-alternative in the very early stages as of March 2023.\nIt looks really promising though, and [[pandoc]] has support for it as of [version 3.1.2](30. Mar 2023). So it's only a matter of time until we can go from [[Rmarkdown]] or [[Quarto]] to PDF _without LaTeX_. That would be amazing.","lastmodified":"2023-04-01T14:39:49.207012967Z","tags":["tools","typesetting","document format"]},"/notes/tools/zsh":{"title":"zsh","content":"\nA neat shell, on both [[notes/OS/macOS]] and [[notes/OS/Ubuntu]].\nAs far as I remember not quite [[POSIX]]-compliant like [[bash]] and therefore(?) not as portable, but a lot nicer.\nTo be honest, not as nioce as [[fish]] though, but that one, nice as it is, has a somewhat different syntax, making it not only less portable, but also hard for muscle-memory-riddled ol' me.\n\n## Setup\n\n- oh-my-zsh\n- autosuggestions\n- syntax-highlighting\n- prompt\n\t- [[notes/tools/starship]]\n\t- p9k -\u003e p10k\n- See also: [syncbin](https://github.com/jemus42/syncbin)","lastmodified":"2023-04-01T14:39:49.207012967Z","tags":["tools","programming","shell"]}}