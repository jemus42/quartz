{"/":{"title":"Quartz Jemu","content":"\nYet another second brain thing.\nBecause I don't have enough half-filled auxilliary brains lying around already.\nBut here goes.\n\nMaybe something about [[notes/tools/starship]], or [[ML]], or [[notes/programming/Rust]]?\nAt this point I'm just making links to stuff for the link's sake.\n","lastmodified":"2023-03-27T23:57:26.280125425Z","tags":[]},"/_notion-like-tables/table-id-njkJrJ":{"title":"table-id-njkJrJ","content":"\n| New Column |\n| -------- |\n|          |","lastmodified":"2023-03-27T23:57:26.280125425Z","tags":[]},"/notes/Linear-Regression":{"title":"Linear Regression","content":"\nGood ol' $\\mathbf{X}(\\mathbf{X}'\\mathbf{X})^{-1}\\mathbf{X}'\\mathbf{Y}$ amirite","lastmodified":"2023-03-27T23:57:26.280125425Z","tags":["regression"]},"/notes/ML/Elastic-Net":{"title":"Elastic Net","content":"\nA [[ML/techniques/regularization]] technique used form [[notes/Linear Regression]] to [[deep learning]].\n\n\nSpawned [[notes/ML/fwelnet]].","lastmodified":"2023-03-27T23:57:26.280125425Z","tags":["machine-learning","regression","regularization"]},"/notes/ML/fwelnet":{"title":"fwelnet","content":"\n-  [[notes/programming/R]] package on [GitHub](https://github.com/kjytay/fwelnet)\n\n","lastmodified":"2023-03-27T23:57:26.280125425Z","tags":["regulariuzation","regression"]},"/notes/ML/mlr3":{"title":"mlr3","content":"\n[[notes/programming/R]] package / framework for ML stuff.","lastmodified":"2023-03-27T23:57:26.280125425Z","tags":["machine-learning","r-package","framework"]},"/notes/OS/FreeBSD":{"title":"FreeBSD","content":"","lastmodified":"2023-03-27T23:57:26.280125425Z","tags":["operating-system"]},"/notes/OS/TrueNAS":{"title":"TrueNAS","content":"","lastmodified":"2023-03-27T23:57:26.280125425Z","tags":["operating-system"]},"/notes/OS/Ubuntu":{"title":"Ubuntu","content":"","lastmodified":"2023-03-27T23:57:26.280125425Z","tags":["operating-system"]},"/notes/OS/macOS":{"title":"macOS","content":"\n","lastmodified":"2023-03-27T23:57:26.280125425Z","tags":["operating-system"]},"/notes/programming/R":{"title":"R","content":"\nThis is only a test\n\n## Setup on [[notes/OS/macOS]]\n\n## Setup on [[notes/OS/Ubuntu]]","lastmodified":"2023-03-27T23:57:26.280125425Z","tags":["programming"]},"/notes/programming/Rust":{"title":"Rust","content":"\n## Learning Resources\n\n- [The Book][The Book]\n- [The Book, but interactive][book-brown]\n- [Rust by Example][Rust by Example]\n- [Rustlings][rustlings]\n\n\u003e [!tip] Recommended Workflow\n\u003e  \n\u003e By at least one YouTube person anyway:\n\u003e \n\u003e1. Go through the book, cover to cover\n\u003e2. Go through the book again, but now the interactive version\n\u003e3. Rust by example + Rustlings: Complementary.\n\n### Topic-Specific Resources\n- [Are we web yet?](https://www.arewewebyet.org/)\n- [Are we GUI yet?](https://www.areweguiyet.com/)\n- [Are we learning yet?](https://www.arewelearningyet.com/)\n\t- Looks like theres [[ML]] stuff? https://www.arewelearningyet.com/decision-trees/\n\t- Some projects are... not in good shape https://github.com/maciejkula/rustlearn\n\t\t- ![[assets/Screenshot 2023-03-28 at 01.09.21.jpg]]\n\n\n## Setup\n\nVia [rustup], `curl`'ing into `sh` like madlads:\n\n```shell {title=\"Piping into sh lol\"}\ncurl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh\n```\n\n\n[The Book]: https://doc.rust-lang.org/book\n[book-brown]: https://rust-book.cs.brown.edu\n[Rust by Example]: https://doc.rust-lang.org/rust-by-example/\n[rustlings]: https://github.com/rust-lang/rustlings\n[rustup]: https://rustup.rs/","lastmodified":"2023-03-27T23:57:26.280125425Z","tags":["programming"]},"/notes/programming/Shell":{"title":"Shell","content":"\n## Scripting\n\n## Arrays\n\nI _think_ this is compatible with [[bash]]/[[notes/tools/zsh]], but not sure. I tend to stick to bash for scripts for portability, just in case.\n\n```shell\npackages=( ctop lazydocker )\n\nfor i in \"${packages[@]}\"\ndo\n  echo \"Checking if $i is available...\"\n  if [ -x \"$(command -v $i)\" ]; then\n    echo \"Found $i\"\n  else\n    brew install $i\n  fi\ndone\n```\n\n### Case\n\n```shell\ncase expression in\n    pattern1 )\n        statements \n    ;;\n    pattern2 )\n        statements\n    ;;\n    ...\nesac\n```","lastmodified":"2023-03-27T23:57:26.280125425Z","tags":["programming"]},"/notes/tools/starship":{"title":"starship ðŸš€","content":"\nAnyone spending a lot of time in the [[terminal]] might have an opinion about what the shell prompt should look like.\n[starship] is one of the possible answers, I guess.\n\n![[assets/Screenshot 2023-03-28 at 01.38.04.jpg]]\n\n[starship]: https://starship.rs","lastmodified":"2023-03-27T23:57:26.280125425Z","tags":["prompt","customization","rust"]},"/notes/tools/zsh":{"title":"zsh","content":"\nA neat [[notes/programming/Shell]]. \nAs far as I remember not quite [[POSIX]]-compliant like [[bash]] and therefore(?) not as portable, but a lot nicer.\nTo be honest, not as nioce as [[fish]] though, but that one, nice as it is, has a somewhat different syntax, making it not only less portable, but also hard for muscle-memory-riddled ol' me.\n\n## Setup\n\n- oh-my-zsh\n- autosuggestions\n- syntax-highlighting\n- prompt\n\t- [[notes/tools/starship]]\n\t- p9k -\u003e p10k","lastmodified":"2023-03-27T23:57:26.280125425Z","tags":["tools","programming"]}}